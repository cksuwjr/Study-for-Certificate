과목 1. 데이터 모델링의 이해 : 제 1장. 데이터 모델링의 이해  23 - 02 - 21
=======================================================================

모델링

추상화, 단순화, 정확화 의 특징
업무정보를 구성하는 기초가 되는 정보들에 대해 일정한 표기법에 의해 표현
분석된 모델을 가지고 데이터베이스를 생성하여 개발 및 데이터 관리에 사용하기 위함
데이터 모델링 자체로 업무의 흐름을 설명하고 분석하는 부분에 의의 있음
중복, 비유연성, 비일관성을 유의하여 유연하고 일관성있게 짜기.





엔티티

엔티티는 속성 필수, 두개 이상의 속성으로 구성, 속성은 한개의 속성값
엔티티는 다른 엔티티와 한개 이상의 관계 가져야함
인스턴스가 두개 이상 존재
업무 프로세스에 의해 이용되야 함.
Ex) 병원 - e환자, 학교 - e학생


속성

업무에서 필요로 하는 인스턴스에서 관리하고자 하는 의미상 더이상 분리되지 않는 최소의 데이터 단위
엔티티에 대한 자세하고 구체적인 정보를 담는 집합이다.

- 기본 속성 : 기본제공 속성 
  Ex) 은행 - 원금, 예치기간, 이자율
- 설계 속성
  Ex) 은행 - 예금분류
- 파생 속성 : 속성으로부터 "계산"된 값
  Ex) 은행 - 이자

속성 명칭부여시 주의할 점
- 해당업무에서 사용하는 이름 부여
- 서술식 속성명 사용X, 약어사용 제한
- 유일성 확보 중요 (엔티티 별 동일 속성명 사용X)


도메인

값의 범위


데이터 모델링의 관계

관계는 존재, 행위에 의한 관계로 구분될 수 있으나 ERD에서는 관계를 연결할 때 존재와 행위 구분없이 단일화된 표기를 사용한다.
UML에는 클래스 다이어그램의 관계 중 연관관계와 의존관계가 있고 이것은 실선과 점선의 표기법으로 다르게 표기된다.
"ERD : 존재, 행위 구분없는 단일화된 표기"
"UML : 실선과 점선의 표기, 연관관계 의존관계"
- 특징이 생각이 안날 땐 각 다이어그램의 모형을 떠올려보자.


관계의 표기법

- 관계명 
- 관계차수 (1:1, 1:M, M:N)
- 관계선택사양 (필수관계, 선택관계)


두 엔티티 사이에 정의한 관계 체크 사항
- 두 엔티티 사이에 관심 있는 규칙이 존재하는가
- 두 엔티티 사이에 정보의 조합이 발생하는가
- 업무기술서, 장표에 관계 연결에 대한 규칙이 서술되 있는가
- 업무기술서, 장표에 관계 연결을 가능하게 하는 "동사"(명사X)가 있는가


주 식별자 도출 기준
- 해당 업무에서 자주 이용되는 속성을 주식별자로 지정
- 명칭, 내역 등과 같이 이름으로 기술되는 것들은 주식별자 지정XXXXX
- 복합으로 주식별자를 구성할 경우 너무 많은 속성을 포함하지 않는다.


식별자관계와 비식별자 관계 선택

식별자관계는 강한, 비식별자는 약한 관계표현이 목적이다.
식별자관계는 자식 주식별자의 구성에 포함되며 비식별자관계는 일반 속성에 포함된다.
식별자관계는 실선 표현, 비식별자는 점선 표현
연결시 고려사항의 경우 식별자관계는 반드시 부모엔티티 종석, 자식 주식별자 구성에 부모 주식별자 포함 필요, 상속받은 주식별자속성을 타엔티티에 이전 필요
비식별자관계는 약한 종속, 자식 주식별자 구성을 독립적 구성, 자식 주식별자구성에 부모 주식별자 일부 필요, 상속받은 주식별자속성을 타 엔티티에 차단 필요, 부모의 관계참여가 선택관계
=> 내가 느낀것: 비식별자는 부모엔티티와 자식엔티티간의 독립성유지, 하나가 손실나도 손해없음
            반면 식별자관계는 하나가 손실나면 모두 손실, 모두 상속 그런 느낌으로 풀면 될 듯 하다.
            


과목 1. 데이터 모델링의 이해 : 제 2장. 데이터 모델과 성능  23 - 02 - 23
=======================================================================

성능 데이터 모델링

데이터의 증가가 빠를수록 성능저하에 따른 성능 개선 비용이 증가한다.
데이터 모델은 성능을 튜닝하면서 변경이 될 수 있는 특징이 있다.
분석/설계 단계에서 성능을 고려한 데이터 모델링을 수행할 경우 성능 저하에 따른 Rework비용을 최소화할 수 있는 기회를 가지게 된다.


성능 데이터 모델링 수행 절차

1. 데이터 모델링을 할 때 '정규화'를 수행한다.
2. 데이터베이스 용량 산정을 수행한다.
3. 데이터베이스에 발생되는 '트랜잭션'의 유형을 파악한다. 
4. 용량과 트랜잭션의 유형에 따라 '반정규화'를 수행한다.
5. 이력모델의 조정, PK/FK조정, 슈퍼타입/서브타입 조정 등을 수행한다.
6. 성능관점에서 데이터 모델을 검증한다.

이후 부분 너무-어려움 일단 건너뜀



과목 2. SQL 기본 및 활용 : 제 1장. SQL 기본  23 - 02 - 23
=======================================================================


DML : SIDU    SELECT INSERT DELETE UPDATE   | 데이터 조작어   What만 하지 How 
DDL : CAD R   CREATE ALTER  DROP   RENAME   | 데이터 정의어
DCL : GR      GRANT  REVOKE                 | 데이터 제어어

TCL : CR      COMMIT ROLLBACK               | 트랜잭션 제어어






























